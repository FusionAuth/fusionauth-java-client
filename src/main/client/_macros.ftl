[#function convertType type language]
  [#if language == "csharp"]
    [#if type == "UUID"]
      [#return "Guid"/]
    [#elseif type == "boolean"]
      [#return "bool"/]
    [#elseif type == "Integer"]
      [#return "int"/]
    [#elseif type == "Long"]
      [#return "long"/]
    [#elseif type == "Void"]
      [#return "RESTVoid"/]
    [#elseif type?starts_with("Collection")]
      [#return type?replace("Collection", "ICollection")?replace("UUID", "Guid")/]
    [#elseif type == "String"]
      [#return "string"/]
    [/#if]
  [#elseif language == "js"]
    [#if type == "UUID" || type == "Integer" || type == "String"]
      [#return "string"/]
    [#elseif type?starts_with("Collection")]
      [#return "Array"/]
    [#else]
      [#return "Object"/]
    [/#if]
  [#elseif language == "ts"]
    [#if type == "UUID"]
      [#return "string"/]
    [#elseif type?matches("int(eger)?", "i")]
      [#return "number"/]
    [#elseif type?matches("long", "i")]
      [#return "number"/]
    [#elseif type == "Void"]
      [#return "void"/]
    [#elseif type?starts_with("Collection")]
      [#return type?replace("Collection", "Array")?replace("UUID", "string")/]
    [#elseif type == "String"]
      [#return "string"/]
    [#else]
      [#return "Object"/]
    [/#if]
  [#elseif language == "php"]
    [#if type == "UUID" || type == "String"]
      [#return "string"/]
    [#elseif type == "boolean" || type == "Boolean"]
      [#return "boolean"/]
    [#elseif type == "int" || type == "Integer"]
      [#return "int"/]
    [#elseif type == "float" || type == "Float"]
      [#return "float"/]
    [#else]
      [#return "array"/]
    [/#if]
  [#elseif language == "ruby"]
    [#if type == "UUID" || type == "String"]
      [#return "string"/]
    [#elseif type?starts_with("Collection")]
      [#return "Array"/]
    [#elseif type == "boolean" || type == "Boolean"]
      [#return "Boolean"/]
    [#elseif type == "int" || type == "Integer"]
      [#return "Numeric"/]
    [#elseif type == "float" || type == "Float"]
      [#return "Numeric"/]
    [#else]
      [#return "OpenStruct, Hash"/]
    [/#if]
  [/#if]
  [#return type/]
[/#function]

[#function convertValue param language]
  [#if language == "ruby"]
    [#if param == "end"]
      [#return "_end"/]
    [/#if]
  [#elseif language == "python"]
    [#if param.constant?? && param.constant]
    [#--Special value conditions for python--]
      [#if param.value?? && param.value == "true"]
        [#return '"true"']
      [#elseif param.value?? && param.value == "false"]
        [#return '"false"']
      [/#if]
    [#else]
    [#--Special name conditions for python--]
      [#if param.name == "global"]
        [#return "_global"]
      [/#if]
    [/#if]
  [/#if]
  [#return (param.constant?? && param.constant)?then(param.value, camel_to_underscores(param.name))/]
[/#function]

[#function optional param language]
  [#if language == "js"]
    [#return param.comments[0]?starts_with("(Optional)")?then("?", "")/]
  [#else]
    [#return ""/]
  [/#if]
[/#function]

[#function methodParameters api language]
  [#local result = []]
  [#if language == "python"]
    [#local result = result + ["self"]]
  [/#if]
  [#list api.params![] as param]
    [#if !param.constant??]
      [#local optional = param.comments[0]?starts_with("(Optional)")/]
      [#if language == "php"]
        [#-- If the parameter is the last one and is optional, give it a default value --]
        [#if !param_has_next && optional]
          [#local result = result + ["$" + param.name + " = NULL"]/]
        [#else]
          [#local result = result + ["$" + param.name]/]
        [/#if]
      [#elseif language == "js"]
        [#local result = result + [param.name]/]
      [#elseif language == "ts"]
        [#local convertedType = convertType(param.javaType, language)/]
        [#local result = result + [param.name + (convertedType != "Object")?then(': ' + convertedType, '')]]
      [#elseif language == "python"]
        [#local result = result + [convertValue(param, language)]/]
      [#elseif language == "ruby"]
        [#if param.name == "end"]
          [#local result = result + ["_end"]/]
        [#else]
          [#local result = result + [camel_to_underscores(param.name)]/]
        [/#if]
      [#elseif language == "csharp" && optional && param.javaType != "String"]
        [#local result = result + [convertType(param.javaType, language) + "? " + param.name]/]
      [#else]
        [#local result = result + [convertType(param.javaType, language) + " " + param.name]/]
      [/#if]
    [/#if]
  [/#list]
  [#return result?join(", ")/]
[/#function]

[#function hasBodyParam params]
  [#list params as param]
    [#if param.type == "body"]
      [#return true]
    [/#if]
  [/#list]
  [#return false]
[/#function]
